<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zb.dao.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.zb.entity.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="synopsis" property="synopsis" jdbcType="VARCHAR" />
    <result column="details" property="details" jdbcType="VARCHAR" />
    <result column="clicks" property="clicks" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="discountprice" property="discountprice" jdbcType="DOUBLE" />
    <result column="salesvolume" property="salesvolume" jdbcType="INTEGER" />
    <result column="is_hot" property="isHot" jdbcType="INTEGER" />
    <result column="is_new" property="isNew" jdbcType="INTEGER" />
    <result column="goods_type_id" property="goodsTypeId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, synopsis, details, clicks, price, discountprice, salesvolume, is_hot, is_new, 
    goods_type_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zb.entity.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zb.entity.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zb.entity.Goods" >
    insert into goods (id, name, synopsis, 
      details, clicks, price, 
      discountprice, salesvolume, is_hot, 
      is_new, goods_type_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{synopsis,jdbcType=VARCHAR}, 
      #{details,jdbcType=VARCHAR}, #{clicks,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, 
      #{discountprice,jdbcType=DOUBLE}, #{salesvolume,jdbcType=INTEGER}, #{isHot,jdbcType=INTEGER}, 
      #{isNew,jdbcType=INTEGER}, #{goodsTypeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zb.entity.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="synopsis != null" >
        synopsis,
      </if>
      <if test="details != null" >
        details,
      </if>
      <if test="clicks != null" >
        clicks,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="discountprice != null" >
        discountprice,
      </if>
      <if test="salesvolume != null" >
        salesvolume,
      </if>
      <if test="isHot != null" >
        is_hot,
      </if>
      <if test="isNew != null" >
        is_new,
      </if>
      <if test="goodsTypeId != null" >
        goods_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="synopsis != null" >
        #{synopsis,jdbcType=VARCHAR},
      </if>
      <if test="details != null" >
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="clicks != null" >
        #{clicks,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="discountprice != null" >
        #{discountprice,jdbcType=DOUBLE},
      </if>
      <if test="salesvolume != null" >
        #{salesvolume,jdbcType=INTEGER},
      </if>
      <if test="isHot != null" >
        #{isHot,jdbcType=INTEGER},
      </if>
      <if test="isNew != null" >
        #{isNew,jdbcType=INTEGER},
      </if>
      <if test="goodsTypeId != null" >
        #{goodsTypeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zb.entity.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.synopsis != null" >
        synopsis = #{record.synopsis,jdbcType=VARCHAR},
      </if>
      <if test="record.details != null" >
        details = #{record.details,jdbcType=VARCHAR},
      </if>
      <if test="record.clicks != null" >
        clicks = #{record.clicks,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.discountprice != null" >
        discountprice = #{record.discountprice,jdbcType=DOUBLE},
      </if>
      <if test="record.salesvolume != null" >
        salesvolume = #{record.salesvolume,jdbcType=INTEGER},
      </if>
      <if test="record.isHot != null" >
        is_hot = #{record.isHot,jdbcType=INTEGER},
      </if>
      <if test="record.isNew != null" >
        is_new = #{record.isNew,jdbcType=INTEGER},
      </if>
      <if test="record.goodsTypeId != null" >
        goods_type_id = #{record.goodsTypeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      synopsis = #{record.synopsis,jdbcType=VARCHAR},
      details = #{record.details,jdbcType=VARCHAR},
      clicks = #{record.clicks,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      discountprice = #{record.discountprice,jdbcType=DOUBLE},
      salesvolume = #{record.salesvolume,jdbcType=INTEGER},
      is_hot = #{record.isHot,jdbcType=INTEGER},
      is_new = #{record.isNew,jdbcType=INTEGER},
      goods_type_id = #{record.goodsTypeId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zb.entity.Goods" >
    update goods
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="synopsis != null" >
        synopsis = #{synopsis,jdbcType=VARCHAR},
      </if>
      <if test="details != null" >
        details = #{details,jdbcType=VARCHAR},
      </if>
      <if test="clicks != null" >
        clicks = #{clicks,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="discountprice != null" >
        discountprice = #{discountprice,jdbcType=DOUBLE},
      </if>
      <if test="salesvolume != null" >
        salesvolume = #{salesvolume,jdbcType=INTEGER},
      </if>
      <if test="isHot != null" >
        is_hot = #{isHot,jdbcType=INTEGER},
      </if>
      <if test="isNew != null" >
        is_new = #{isNew,jdbcType=INTEGER},
      </if>
      <if test="goodsTypeId != null" >
        goods_type_id = #{goodsTypeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zb.entity.Goods" >
    update goods
    set name = #{name,jdbcType=VARCHAR},
      synopsis = #{synopsis,jdbcType=VARCHAR},
      details = #{details,jdbcType=VARCHAR},
      clicks = #{clicks,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      discountprice = #{discountprice,jdbcType=DOUBLE},
      salesvolume = #{salesvolume,jdbcType=INTEGER},
      is_hot = #{isHot,jdbcType=INTEGER},
      is_new = #{isNew,jdbcType=INTEGER},
      goods_type_id = #{goodsTypeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>