<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zb.dao.GoodsImgMapper" >
  <resultMap id="BaseResultMap" type="com.zb.entity.GoodsImg" >
    <id column="goods_img_id" property="goodsImgId" jdbcType="INTEGER" />
    <result column="goods_img_name" property="goodsImgName" jdbcType="VARCHAR" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="create_uid" property="createUid" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="update_uid" property="updateUid" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="DATE" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="states" property="states" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    goods_img_id, goods_img_name, goods_id, create_uid, create_time, update_uid, update_time, 
    image_url, states
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zb.entity.GoodsImgExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_img
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods_img
    where goods_img_id = #{goodsImgId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods_img
    where goods_img_id = #{goodsImgId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zb.entity.GoodsImgExample" >
    delete from goods_img
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zb.entity.GoodsImg" >
    insert into goods_img (goods_img_id, goods_img_name, goods_id, 
      create_uid, create_time, update_uid, 
      update_time, image_url, states
      )
    values (#{goodsImgId,jdbcType=INTEGER}, #{goodsImgName,jdbcType=VARCHAR}, #{goodsId,jdbcType=INTEGER}, 
      #{createUid,jdbcType=INTEGER}, #{createTime,jdbcType=DATE}, #{updateUid,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=DATE}, #{imageUrl,jdbcType=VARCHAR}, #{states,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zb.entity.GoodsImg" >
    insert into goods_img
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodsImgId != null" >
        goods_img_id,
      </if>
      <if test="goodsImgName != null" >
        goods_img_name,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="createUid != null" >
        create_uid,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUid != null" >
        update_uid,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="imageUrl != null" >
        image_url,
      </if>
      <if test="states != null" >
        states,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodsImgId != null" >
        #{goodsImgId,jdbcType=INTEGER},
      </if>
      <if test="goodsImgName != null" >
        #{goodsImgName,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="createUid != null" >
        #{createUid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateUid != null" >
        #{updateUid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="imageUrl != null" >
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="states != null" >
        #{states,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zb.entity.GoodsImgExample" resultType="java.lang.Integer" >
    select count(*) from goods_img
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods_img
    <set >
      <if test="record.goodsImgId != null" >
        goods_img_id = #{record.goodsImgId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsImgName != null" >
        goods_img_name = #{record.goodsImgName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.createUid != null" >
        create_uid = #{record.createUid,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.updateUid != null" >
        update_uid = #{record.updateUid,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=DATE},
      </if>
      <if test="record.imageUrl != null" >
        image_url = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.states != null" >
        states = #{record.states,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods_img
    set goods_img_id = #{record.goodsImgId,jdbcType=INTEGER},
      goods_img_name = #{record.goodsImgName,jdbcType=VARCHAR},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      create_uid = #{record.createUid,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=DATE},
      update_uid = #{record.updateUid,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=DATE},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      states = #{record.states,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zb.entity.GoodsImg" >
    update goods_img
    <set >
      <if test="goodsImgName != null" >
        goods_img_name = #{goodsImgName,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="createUid != null" >
        create_uid = #{createUid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateUid != null" >
        update_uid = #{updateUid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="imageUrl != null" >
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="states != null" >
        states = #{states,jdbcType=INTEGER},
      </if>
    </set>
    where goods_img_id = #{goodsImgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zb.entity.GoodsImg" >
    update goods_img
    set goods_img_name = #{goodsImgName,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=INTEGER},
      create_uid = #{createUid,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      update_uid = #{updateUid,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=DATE},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      states = #{states,jdbcType=INTEGER}
    where goods_img_id = #{goodsImgId,jdbcType=INTEGER}
  </update>
</mapper>